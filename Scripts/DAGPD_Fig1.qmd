---
title: "DAGPD: Highly diversity of gut phage genomes across various domestic animals"
author: "Yuxuan Huang"
format: 
  html:
    embed-resources: true
---

# Highly diversity of gut phage genomes across various domestic animals

## Barplot showing the basic annotation of DAGPDs
```{r,warning=FALSE,message=FALSE}
setwd("~/Downloads/DAGPD/cell/Scripts")
library(tidyverse)
# read annotation results
data1 <- read.table("../Pre-processed_Files/column_plot.txt",header = T)

source("./theme_llm.R")
theme_set(theme_llm(base_size = 16,legend = "top"))

data1$Category <- factor(data1$Category,levels = unique(data1$Category))
ggplot()  + 
  geom_col(data=data1,
           mapping = aes(x=ID,y=Counts,fill=Category),width = 0.5) +
  ylab("Genome Counts")+
  xlab("")+
  scale_fill_brewer(palette = "Set3")+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  theme(legend.title=element_blank())


```


## Distribution of genomes per VC form different sources
```{r,warning=FALSE,message=FALSE}
theme_set(theme_llm(base_size = 16,legend = "bottom",margin=FALSE))
phage_sum <- read.table("../Pre-processed_Files/chick_pig_rumen_phage_sum.txt",header = T)

phage_sum <- filter(phage_sum,index<61)

#phage_sum$VC <- factor(phage_sum$VC,levels = unique(phage_sum$VC))
#p2 <- ggplot()  + 
 # geom_line(mapping = aes(x = data2$VC, y = data2$Genomes,group=1),color="orange")


ggplot()  + 
  geom_col(data= filter(phage_sum,Species!="sum"),mapping = aes(x=index,y=Genomes ,fill=Species),alpha=0.7) +
  geom_line(data= filter(phage_sum,Species=="sum"),group=1,mapping=aes(x=index,y=Genomes+1),colour= "orange") + 
  geom_point(data= filter(phage_sum,Species=="sum"),group=1,mapping=aes(x=index,y=Genomes+2),colour= "orange",size = 0.2) +
  labs(y = "Genomes/VC",x="Viral Cluster Index")+
  theme(aspect.ratio=1)+
  scale_color_manual(values  = c("Chicken"="#FFBC00","Pig"="#E588A6","Ruminant"="#0AC5AD"),aesthetics = c("fill"))+
  theme(legend.title=element_blank())+
  #coord_flip()+
  #scale_x_reverse()+
  theme(legend.position = c(0.65,0.53))
  #ggsci::scale_fill_npg()
```


## Dot plot show occupancy-abundance for gut phage communities from different sources
```{r,message=FALSE,warning=FALSE}
core_phage <- read.csv("../Pre-processed_Files/core_phage.csv",header = T)

theme_set(theme_llm(base_size = 16,legend = "top"))

ggplot(data=core_phage, aes(x=log10(otu_rel), y=otu_occ,color=Group))+
  geom_point(size = 0.3,alpha = 0.5 )+
  geom_point(data=filter(core_phage,fill=="Core"), aes(x=log10(otu_rel), y=otu_occ),size=1,alpha=0.7)+
  scale_color_manual(values  = c("Chicken"="#FFBC00","Pig"="#E588A6","Ruminant"="#0AC5AD",
                                 "Chicken-Compartments"="#FFBC00","Pig-Compartments"="#E588a6","Ruminant-Compartments"="#0AC5AD",
                                 "Chicken-no"="#FFBC00","Pig-no"="#E588a6","Ruminant-no"="#0AC5AD"),name="Group")+
  xlim(-7,0)+
  ylim(0.3,1)+
  labs(x='log(mean relative abundace per vOTU)', y='Occupancy', fill=NULL)+
  theme(legend.title=element_blank())
```


## histogram of the genome length distribution of phages with genomes of more than 200kb
```{r,message=FALSE,warning=FALSE}
trna <-  read_table("../Pre-processed_Files/ref.nature.DAGPD.trna.clean2.txt", col_names = FALSE)
colnames(trna) <- c("Name","tRNA","Begin" ,"End", "Type", "Codon","Begin","End" ,"Score","Note")
trna_stats <- table(trna$Name) %>% sort() %>% as.data.frame()
colnames(trna_stats) <- c("id","trna")

genome_stats <- read_table("../Pre-processed_Files/ref.nature.DAGPD.genome.stats2.txt", col_names = FALSE)
colnames(genome_stats) <- c("id","length","GC")
genome_stats2<- genome_stats %>% select("id","length") %>% mutate(size=case_when(
                                                                 length >=100000 & length<250000~"250kb",
                                                                 length >=250000 & length<300000~"300kb",
                                                                 length >=300000 & length<350000~"350kb",
                                                                 length >=350000 & length<400000~"400kb",
                                                                 length >=400000 & length<450000~"450kb",
                                                                 length >=450000 & length<500000~"500kb",
                                                                 length >=500000 & length<550000~"550kb",
                                                                 length >=550000 & length<600000~"600kb",
                                                                 length >=600000 & length<750000~"700kb"))


genome_stats3 <- genome_stats2  %>%  mutate(source=case_when(
  startsWith(id,"NC_")~"Ref",
  grepl("chick_|cow_|pig_|@k",id)~"DAGPD",
      TRUE~"nature"))


genome_stats_trna <- merge(genome_stats3,trna_stats,by="id")

size_count <- genome_stats_trna %>% group_by(size) %>% count() %>% na.omit()

genome_stats_trna2 <- left_join(genome_stats_trna,size_count,by="size") %>% na.omit()
genome_stats_trna2$n2 <- 1

genome_stats_trna2 <- filter(genome_stats_trna2,genome_stats_trna2$length>200000)

genome_stats_trna2$size2 <- gsub(pattern = "*kb",x = genome_stats_trna2$size,replacement = "")

library(ggsci)
theme_set(theme_llm(base_size = 16,legend = "top",margin=FALSE))
ggplot(genome_stats_trna2, aes(fill=source, y=n2, x=size2)) + 
  geom_bar(position="stack", stat="identity",alpha=1)+
  scale_fill_discrete(labels=c("DAGPD","Ecosystems","Ref"))+
  geom_boxplot(data = genome_stats_trna2,aes(fill=size2,y = trna*5), color = "black",fill="grey",alpha=0.5,width=0.4)+
  geom_point(data = genome_stats_trna2, aes(fill=size2,y = trna*5), color = "black",fill="grey")+
  scale_y_continuous(sec.axis = sec_axis(~ .*0.2 , name = "tRNAs per genome (count)"))+
  ylab("Genomes (count)")+
  xlab("Genome size (kb)")
```

## A global bubble map showing the geographic distribution of the metagenomes
```{r,message=FALSE,warning=FALSE}
geo_meta <- read.csv("../Pre-processed_Files/chick_pig_cow_geograph_meta.csv")
geo_meta_filter <- na.omit(geo_meta)
geo_meta_filter <- geo_meta_filter %>% group_by(longitude) %>% add_count(name = "size")

## draw
world <- map_data("world")


p1 <- ggplot() +
  geom_map(
    data = world, map = world,
    aes(long, lat, map_id = region),
    color = "lightgray", fill = "lightgray", linewidth = 0.1
  )
p1+
  geom_point(
    data = geo_meta_filter,
    aes(longitude, latitude, 
        color = colour,
        size = size),
    alpha = 0.01
    
  )+
  scale_size(range = c(1, 15))+
  ylim(-55,90)+
  labs(x = NULL, y = NULL, color = NULL)+
  theme_void() +
  theme(legend.position = "none")
```

## Genome completeness distribution according to CheckV
```{r,warning=FALSE,message=FALSE}
completeness_res <- read.table("../Pre-processed_Files/completeness.txt",header = T)

ggplot(filter(completeness_res,group!="all"),aes(x=completeness,fill=group))+
  #geom_histogram(aes(x = completeness, y = ..density..),binwidth=1,alpha=0.7)+
  xlim(c(90,105))+
  xlab("Genome completeness (%)")+
  geom_density(aes(x=completeness,y=..density..),alpha=0.7)+
  #ggsci::scale_fill_npg()
  scale_color_manual(values  = c("Chicken"="#FFBC00","Pig"="#E588A6","Ruminant"="#0AC5AD"),aesthetics = c("fill"))+
  theme(legend.title=element_blank())
```


## Genome contamination distribution as estimated by CheckV
```{r,warning=FALSE,message=FALSE}
contamination_res <- read.table("../Pre-processed_Files/contamination.txt",header = T)

ggplot(filter(contamination_res,group!="all"),aes(x=contamination,fill=group))+
  #geom_histogram(aes(x = completeness, y = ..density..),binwidth=1,alpha=0.7)+
  xlim(c(-5,15))+
  xlab("Contamination (%)")+
  geom_density(aes(x=contamination,y=..density..),alpha=0.7)+
  #ggsci::scale_fill_npg()
  scale_color_manual(values  = c("Chicken"="#FFBC00","Pig"="#E588A6","Ruminant"="#0AC5AD"),aesthetics = c("fill"))+
  theme(legend.title=element_blank())
```


## Size distribution of DAGPD against GPD and IMG /VR databases
```{r,warning=FALSE,message=FALSE,cache=TRUE}
Genome_size <- read.table("../Pre-processed_Files/GPD_IMG_DAGPD_length2.txt",header = T)
#set.seed(1234)
#test <- Genome_size[sample(nrow(Genome_size),100000),]
theme_set(theme_llm(base_size = 16,legend = "none"))
Genome_size %>%
  ggplot(aes(x=group, y=length/1000, fill=group),alpha=0.5) +
  geom_violin() +
  geom_boxplot(width=0.05,cex=0.2)+
  ylim(0,100)+
  #scale_fill_viridis(discrete = TRUE, alpha=0.6, option="A") +
  xlab("INDEX")+
  ylab("Genome size (kb)")+
  ggsci::scale_fill_npg()
```


## A rarefaction curve of the richness with increasing the number of reads
```{r,message=FALSE,warning=FALSE}
alpha_rare <- read.csv("../Pre-processed_Files/alpha_rare.csv")
theme_set(theme_llm(base_size = 16,legend = "top"))
ggplot(alpha_rare, aes(x = index, y = mean,color = Group)) +
  geom_line(size = 2) + 
  scale_color_manual(values=c("#FFBC00","#E588A6","#0AC5AD"))+
  ylab("Richness")+
  xlab("Rarefaction Percentage (%)")+
  theme(legend.title=element_blank())
```


## A rarefaction curve of the vOTUs identified in different domestic animal gut with increasing the sample number
```{r,warning=FALSE,message=FALSE}
accumulation_data <- read.csv("../Pre-processed_Files/chick_pig_cow_accumulation_data.csv",header = T)

theme_set(theme_llm(base_size = 16,legend = "top"))
ggplot(accumulation_data , aes(x = SampleNumber, y = SpeciesNumber,color = Group)) +
   geom_point() +
  labs(x = "Sample Number",
       y = "Number of vOTUs")+
  scale_color_manual(values=c("#FFBC00","#E588A6","#0AC5AD"))

```


## Prediction of viral taxonomy at family level to DAGPD genomes by PhaGCN
```{r,warning=FALSE,message=FALSE}
theme_set(theme_llm(base_size = 16,legend = "none"))
phage_family <- read.table("../Pre-processed_Files/phage_family.txt",header = T)
phage_family_freq <- phage_family %>% group_by(family) %>% mutate(freq=n()) %>% distinct(family,freq =freq)

phage_family_freq$percent <- phage_family_freq$freq/sum(phage_family_freq$freq)
phage_family_freq$family <- factor(phage_family_freq$family,levels = unique(reorder(phage_family_freq$family,-phage_family_freq$percent)))
library(RColorBrewer)
Blues_colors <- brewer.pal(9, "Blues")
filter(phage_family_freq,percent>0.01)
ggplot(data=filter(phage_family_freq,percent>0.02))+
  geom_col(aes(x=reorder(family,-percent),y=percent*100,fill=family))+
  xlab("INDEX")+
  ylab("Percentage of genomes (%)")+
  theme(axis.text.x=element_text(angle = 45,hjust = 1))+
  scale_fill_manual(values = Blues_colors,breaks = rev(c("Unknown","Salasmaviridae",
                                                         "Straboviridae","Chaseviridae",
                                                         "Peduoviridae","Casjensviridae",
                                                         "Drexlerviridae","Ackermannviridae",
                                                         "Mesyanzhinovviridae")))
```

